"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[7658],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,y=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(y,l(l({ref:t},s),{},{components:r})):n.createElement(y,l({ref:t},s))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,l[1]=c;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3389:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(3117),a=(r(7294),r(3905));const o={},l="Explode row",c={unversionedId:"pyspark/Data Analysis/Explode row",id:"pyspark/Data Analysis/Explode row",title:"Explode row",description:"Explode row l\xe0 ph\u01b0\u01a1ng th\u1ee9c chuy\u1ec3n 1 Array Struct, ho\u1eb7c 1 cell c\xf3 ch\u1ee9a string with separator th\xe0nh nhi\u1ec1u rows",source:"@site/docs/pyspark/Data Analysis/Explode row.mdx",sourceDirName:"pyspark/Data Analysis",slug:"/pyspark/Data Analysis/Explode row",permalink:"/second-documentation/docs/pyspark/Data Analysis/Explode row",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Duplicate values",permalink:"/second-documentation/docs/pyspark/Data Analysis/Duplicate values"},next:{title:"Fill missing data from row",permalink:"/second-documentation/docs/pyspark/Data Analysis/Foward fill"}},i={},p=[],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"explode-row"},"Explode row"),(0,a.kt)("p",null,"Explode row l\xe0 ph\u01b0\u01a1ng th\u1ee9c chuy\u1ec3n 1 Array Struct, ho\u1eb7c 1 cell c\xf3 ch\u1ee9a ",(0,a.kt)("strong",{parentName:"p"},"string with separator")," th\xe0nh nhi\u1ec1u rows"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="String with separator"',title:'"String',with:!0,'separator"':!0},"# split row that separated by comma to multiple rows\ndf.withColumn('colA', \n                f.explode(f.split('colA', ','))\n            )\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"V\xed d\u1ee5"),": Create a continuous column from date 31/01/2023 to 14/02/2023"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Array Struct separator"',title:'"Array',Struct:!0,'separator"':!0},'# split row that from an Array Struct\nbank_statement.groupBy("Account Number").agg(\n    f.lit(datetime(2023, 2, 14)).alias("max_date"),\n    f.lit(datetime(2023, 1, 31)).alias("min_date")\n).select(\n    "Account Number",\n    f.expr("sequence(min_date, max_date, interval 1 day)").alias("Balance Date")\n).withColumn(\n    "Balance Date", f.explode("Balance Date")\n)\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"keyword"),": fill column with date, t\u1ea1o c\u1ed9t ch\u1ee9a date range, fill missing date"))}d.isMDXComponent=!0}}]);